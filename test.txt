The aim of this assignment is to have you do UDP socket client / server programming with a focus on two broad aspects :Setting up the exchange between the client and server in a secure way despite the lack of a formal connection (as in TCP) between the two, so that ‘outsider’ UDP datagrams 
(broadcast, multicast, unicast - fortuitously or maliciously) cannot intrude on the communication.Introducing application-layer protocol data-transmission reliability, flow control and congestion control in the client and server using TCP-like ARQ sliding window 
mechanisms.The second item above is much more of a challenge to implement than the first, though neither is particularly trivial. But they are not tightly interdependent; each 
can be worked on separately at first and then integrated together at a later stage.Apart from the material in Chapters 8, 14 & 22 (especially Sections 22.5 - 22.7), and the 
experience you gained from the preceding assignment, you will also need to refer to the following :ioctl function (Chapter 17).get_ifi_info function (Section 17.6, Chapter 
17). This function will be used by the server code to discover its node’s network interfaces so that it can bind all its interface IP addresses (see Section 22.6).‘Rac 
conditions (Section 20.5, Chapter 20);
